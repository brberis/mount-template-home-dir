#!/bin/bash
#
# PBS/Torque MPI Optimization Script
# 
# This script configures PBS/Torque for large-scale MPI jobs.
# NOTE: Torque 7.0.1 has cgroups compiled-in with kernel limits (~40 tasks/cgroup).
# The $cgroups directive is ignored. Maximum tested: ppn=40 (works), ppn=45 (fails).
#
# Can be run by crew user (non-root) - uses sudo for privileged operations.
# 
# Usage: bash setup_pbs_for_mpi.sh
#
# Run on: ALL nodes (head node + compute nodes)
#

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if sudo is available
if ! command -v sudo &> /dev/null; then
   log_error "sudo command not found. This script requires sudo to be installed."
   exit 1
fi

# Detect node type
IS_HEADNODE=false
if [[ -f /NODUS/.is_headnode ]]; then
    IS_HEADNODE=true
    log_info "Detected HEAD NODE"
    log_info "PBS MOM runs on compute nodes - skipping head node configuration"
    echo ""
    log_info "=========================================="
    log_info "  HEAD NODE - Nothing to configure"
    log_info "=========================================="
    log_info "This script configures PBS MOM (Machine-Oriented Mini-server)"
    log_info "PBS MOM only runs on compute nodes, not on the head node"
    log_info "Exiting gracefully"
    echo ""
    exit 0
else
    log_info "Detected COMPUTE NODE"
fi

# Check if PBS MOM is installed
if ! systemctl list-unit-files | grep -q pbs_mom; then
    log_error "PBS MOM service not found. This script requires PBS MOM to be installed."
    exit 1
fi

MOM_CONFIG="/var/spool/torque/mom_priv/config"

# Check if config file exists, create it if not
if [[ ! -f "$MOM_CONFIG" ]]; then
    log_warn "PBS MOM config not found: $MOM_CONFIG"
    log_info "Creating new config file..."
    sudo mkdir -p "$(dirname "$MOM_CONFIG")"
    sudo touch "$MOM_CONFIG"
    sudo chmod 644 "$MOM_CONFIG"
    log_info "✓ Created new config file"
else
    log_info "Found existing PBS MOM config: $MOM_CONFIG"
    
    # Backup original config if it has content
    if [[ -s "$MOM_CONFIG" ]]; then
        BACKUP_CONFIG="${MOM_CONFIG}.backup.$(date +%Y%m%d_%H%M%S)"
        sudo cp "$MOM_CONFIG" "$BACKUP_CONFIG"
        log_info "Created backup: $BACKUP_CONFIG"
    fi
fi

# Step 1: Configure PBS for large-scale MPI jobs
log_info "Step 1: Configuring PBS for large-scale MPI jobs"

# Remove any existing MPI tuning section
sudo sed -i '/# MPI Job Tuning - Auto-generated/,/# End MPI Job Tuning/d' "$MOM_CONFIG"

# Add optimized configuration
# NOTE: $cgroups false is ignored by Torque 7.0.1 (cgroups compiled-in)
# However, we include it for documentation and potential future versions
sudo tee -a "$MOM_CONFIG" > /dev/null << 'EOF'

# MPI Job Tuning - Auto-generated by setup_pbs_for_mpi.sh
# This configuration attempts to disable cgroups for high-ppn MPI jobs

# Attempt to disable cgroups (NOTE: ignored by Torque 7.0.1)
# Torque 7.0.1 has cgroups compiled-in with kernel task limits
# Maximum working ppn per node: 40 (tested)
# Jobs with ppn > 40 fail with "No space left on device" cgroup errors
$cgroups false

# Load balancing and process limits
# Increase limits to support many MPI processes
$max_load 500
$ideal_load 100

# Increase logging for debugging (can be reduced to 0 in production)
$loglevel 3

# Allow unrestricted process creation for MPI
$check_poll_time 120

# End MPI Job Tuning
EOF

log_info "✓ PBS cgroups DISABLED for high-ppn MPI jobs"

# Step 2: Tune system limits for MPI
log_info "Step 2: Configuring system limits for MPI processes"

LIMITS_CONF="/etc/security/limits.d/90-mpi-jobs.conf"

sudo tee "$LIMITS_CONF" > /dev/null << 'EOF'
# System limits for MPI jobs
# Auto-generated by setup_pbs_for_mpi.sh

# Allow many processes (important for MPI with many ranks)
* soft nproc 65536
* hard nproc 65536

# Allow many open files (MPI libraries open many sockets)
* soft nofile 65536
* hard nofile 65536

# Allow large stack size (some MPI implementations need this)
* soft stack unlimited
* hard stack unlimited

# Allow locked memory (important for InfiniBand/RDMA if present)
* soft memlock unlimited
* hard memlock unlimited
EOF

sudo chmod 644 "$LIMITS_CONF"
log_info "✓ System limits configured: $LIMITS_CONF"

# Step 3: Restart PBS MOM to apply changes
log_info "Step 3: Restarting PBS MOM service"

if sudo systemctl restart pbs_mom 2>/dev/null; then
    log_info "✓ PBS MOM restarted successfully"
    sleep 2
    
    # Verify PBS MOM is running
    if sudo systemctl is-active --quiet pbs_mom; then
        log_info "✓ PBS MOM is active and running"
    else
        log_error "PBS MOM failed to start properly"
        log_error "Check logs: sudo journalctl -u pbs_mom -n 50"
        exit 1
    fi
else
    log_error "Failed to restart PBS MOM"
    log_error "You may need to restart manually: sudo systemctl restart pbs_mom"
    exit 1
fi

# Summary
echo ""
log_info "=========================================="
log_info "  PBS MPI Optimization Complete!"
log_info "=========================================="
log_info "Node type: $(if [[ "$IS_HEADNODE" == "true" ]]; then echo "HEAD NODE"; else echo "COMPUTE NODE"; fi)"
echo ""
log_info "Configuration changes:"
log_info "  ✓ Cgroups: Attempted to disable (directive ignored by Torque 7.0.1)"
log_info "  ✓ Process limits: Increased to 65536"
log_info "  ✓ File limits: Increased to 65536"
log_info "  ✓ Memory locks: Unlimited (for RDMA)"
echo ""
log_info "What this means:"
log_info "  • Maximum ppn per node: 40 (cgroups kernel limit)"
log_info "  • For 80 cores: use nodes=2:ppn=40"
log_info "  • For 96 cores: use nodes=4:ppn=24 or nodes=3:ppn=32"
log_info "  • Multi-node jobs fully supported within ppn limits"
echo ""
log_info "Files modified:"
log_info "  - PBS config: ${MOM_CONFIG}"
log_info "  - System limits: ${LIMITS_CONF}"
log_info "  - Backup created: ${BACKUP_CONFIG}"
echo ""
log_info "PBS MOM status: $(sudo systemctl is-active pbs_mom)"
log_info "Ready for large-scale MPI jobs!"
echo ""

exit 0
